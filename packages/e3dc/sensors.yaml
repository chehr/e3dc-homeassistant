# Implementierung der Modbus/TCP-Schnittstelle Version: V2.20 vom 24.07.2023
# C.Hehr 01.03.2024 - getested mit E3/DC S10X
e3dc_sensors:
  sensor:
    # Templates
    - platform: template
      sensors:
        e3dc_external_power:
          friendly_name: E3DC External Power
          unit_of_measurement: W
          value_template: >
            { states('sensor.e3dc_external_power') | float | abs }}
        e3dc_grid_export_power:
          unique_id: e3dc_grid_export_power
          friendly_name: "E3DC Grid Export Power"
          unit_of_measurement: "W"
          device_class: power
          value_template: >
            {% set power = states('sensor.e3dc_grid_power') | int(0) %}
            {% if power > 0 %}
              0
            {% else -%}
              {{ power | abs }}
            {% endif %}
        e3dc_grid_import_power:
          unique_id: e3dc_grid_import_power
          friendly_name: E3DC Grid Import Power
          unit_of_measurement: W
          device_class: power
          value_template: >
            {% set power = states('sensor.e3dc_grid_power') | int(0) %}
            {% if power > 0 %}
              {{ power }}
            {% else -%}
              0
            {% endif %}
        e3dc_battery_charge_power:
          unique_id: e3dc_battery_charge_power
          friendly_name: E3DC Battery Charging Power
          unit_of_measurement: W
          device_class: power
          value_template: >
            {% set power = states('sensor.e3dc_battery_power') | float(0) %}
            {% if power >= 0 %}
              {{ power }}
            {% else %}
              {% set charge_power = states('sensor.e3dc_battery_charge_power') | float(0) + power %}
              {{ charge_power if charge_power > 0 else 0 }}
            {% endif %}
        e3dc_battery_discharge_power:
          unique_id: e3dc_battery_discharge_power
          friendly_name: E3DC Battery Discharging Power
          unit_of_measurement: W
          device_class: power
          value_template: >
            {% set power = states('sensor.e3dc_battery_power') | float(0) %}
            {% if power <= 0 %}
              {{ power | abs }} 
            {% else %}
              {% set discharge_power = states('sensor.e3dc_battery_charge_power') | float(0) - power %}
              {{ discharge_power if discharge_power > 0 else 0 }}
            {% endif %}
        e3dc_autarky:
          friendly_name: "E3DC Autarky"
          unique_id: e3dc_autarky
          unit_of_measurement: "%"
          value_template: "{{ (states('sensor.e3dc_autarky_and_consumption')|int(0) / 256)|round(0,'floor') }}"
        e3dc_own_consumption:
          friendly_name: "E3DC Own Consumption Ratio"
          unique_id: e3dc_own_consumption_ratio
          unit_of_measurement: "%"
          value_template: "{{ ((states('sensor.e3dc_autarky_and_consumption')|int(0) / 256 - states('sensor.e3dc_autarky')|int(0)) * 256)|round(0,'floor') }}"
        e3dc_emergency_power_state_text:
          friendly_name: E3DC Emergency Power State Text
          unique_id: e3dc_emergency_power_state_text
          value_template: >
            {% set eps = states('sensor.e3dc_emergency_power_state') %}
            {% if eps == '0' %}
              Notstrom wird nicht von Ihrem Gerät unterstützt
            {% elif eps == '1' %}
              Notstrom aktiv
            {% elif eps == '2' %}
              Notstrom nicht aktiv
            {% elif eps == '3' %}
              Notstrom nicht verfügbar
            {% elif eps == '4' %}
              Motorschalter falsche Position
            {% else %}
              unbekannt
            {% endif %}
        e3dc_string_1_current:
          friendly_name: "E3DC string 1 Current"
          unique_id: e3dc_string_1_current
          device_class: current
          unit_of_measurement: A
          value_template: >- 
            {% set Current = states('sensor.e3dc_string_1_current_100') | float %}
            {{ (Current) / 100 }}
        e3dc_string_2_current:
          friendly_name: "E3DC string 2 Current"
          unique_id: e3dc_string_2_current
          device_class: current
          unit_of_measurement: A
          value_template: >- 
            {% set Current = states('sensor.e3dc_string_2_current_100') | float %}
            {{ (Current) / 100 }}
    # Integrations
    - platform: integration
      source: sensor.e3dc_grid_import_power
      name: E3DC Grid Import Energy
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_grid_export_power
      name: E3DC Grid Export Energy
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_solar_power
      name: E3DC Solar Energy
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_external_power
      name: E3DC External Power
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_battery_power
      name: E3DC Builtin Battery Energy
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_battery_charge_power
      name: E3DC Battery Charge Energy
      unit_prefix: k
      round: 2
      method: left
    - platform: integration
      source: sensor.e3dc_battery_discharge_power
      name: E3DC Battery Discharge Energy
      unit_prefix: k
      round: 2
      method: left
